// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ª–æ–≥–∏–∫–∏ –∏–≥—Ä—ã
console.log('[FORCE-GAME-LOGIC] –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã');

function forceGameLogic() {
  console.log('[FORCE-GAME-LOGIC] === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö –ò–ì–†–´ ===');
  
  // 1. –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
  const button = document.querySelector('[data-track="bet_1.place"]');
  if (button) {
    button.classList.remove('_disabled', 'disabled', 'blocked', 'inactive');
    button.disabled = false;
    button.style.pointerEvents = 'auto';
    button.style.opacity = '1';
    button.style.cursor = 'pointer';
    console.log('[FORCE-GAME-LOGIC] ‚úÖ –ö–Ω–æ–ø–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
  }
  
  // 2. –ò—â–µ–º –æ–±—ä–µ–∫—Ç –∏–≥—Ä—ã –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
  let gameObject = null;
  for (let key in window) {
    if (window[key] && typeof window[key] === 'object') {
      const obj = window[key];
      if (obj.placeBet && typeof obj.placeBet === 'function') {
        gameObject = obj;
        console.log('[FORCE-GAME-LOGIC] ‚úÖ –ù–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç –∏–≥—Ä—ã:', key);
        break;
      }
    }
  }
  
  if (!gameObject) {
    console.log('[FORCE-GAME-LOGIC] ‚ùå –û–±—ä–µ–∫—Ç –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É');
    createForcedGameLogic();
    return;
  }
  
  // 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
  if (gameObject) {
    console.log('[FORCE-GAME-LOGIC] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏–≥—Ä—É...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gameStarted
    if (gameObject.setGameStarted) {
      gameObject.setGameStarted(true);
    } else {
      gameObject.gameStarted = true;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º roundId
    const roundId = `forced-round-${Date.now()}`;
    if (gameObject.setRoundId) {
      gameObject.setRoundId(roundId);
    } else {
      gameObject.roundId = roundId;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º clientSeed –∏ nonce
    gameObject.clientSeed = `forced-client-seed-${Math.random().toString(36).substr(2, 16)}`;
    gameObject.nonce = Math.floor(Math.random() * 1000) + 1;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º amount
    if (gameObject.setAmount) {
      gameObject.setAmount(100);
    } else {
      gameObject.amount = 100;
    }
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º lockedButtons getter
    if (gameObject.lockedButtons !== undefined) {
      Object.defineProperty(gameObject, 'lockedButtons', {
        get: function() {
          console.log('[FORCE-GAME-LOGIC] lockedButtons getter –≤—ã–∑–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false');
          return false;
        },
        configurable: true
      });
    }
    
    console.log('[FORCE-GAME-LOGIC] ‚úÖ –ò–≥—Ä–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞:', {
      gameStarted: gameObject.gameStarted,
      roundId: gameObject.roundId,
      clientSeed: gameObject.clientSeed,
      nonce: gameObject.nonce,
      amount: gameObject.amount
    });
  }
  
  // 4. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
  if (button) {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const newButton = button.cloneNode(true);
    button.parentNode.replaceChild(newButton, button);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    newButton.addEventListener('click', function(event) {
      console.log('[FORCE-GAME-LOGIC] üéÆ –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É...');
      
      event.preventDefault();
      event.stopPropagation();
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º API –∏ –ª–æ–≥–∏–∫—É –∏–≥—Ä—ã
      runGameSequence();
    });
    
    console.log('[FORCE-GAME-LOGIC] ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
}

function createForcedGameLogic() {
  console.log('[FORCE-GAME-LOGIC] –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –∏–≥—Ä—ã...');
  
  const button = document.querySelector('[data-track="bet_1.place"]');
  if (!button) return;
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const newButton = button.cloneNode(true);
  button.parentNode.replaceChild(newButton, button);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  newButton.addEventListener('click', function(event) {
    console.log('[FORCE-GAME-LOGIC] üéÆ –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É...');
    
    event.preventDefault();
    event.stopPropagation();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã
    runGameSequence();
  });
  
  console.log('[FORCE-GAME-LOGIC] ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞');
}

function runGameSequence() {
  console.log('[FORCE-GAME-LOGIC] üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã...');
  
  const button = document.querySelector('[data-track="bet_1.place"]');
  if (button) {
    button.style.backgroundColor = '#FF6B6B';
    button.textContent = '–ó–ê–ü–£–°–ö–ê–ï–ú...';
  }
  
  // 1. –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
  console.log('[FORCE-GAME-LOGIC] 1. –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É...');
  fetch('/api/games/create', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': localStorage.getItem('token') || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2LCJuaWNrbmFtZSI6IkxvY2FsVm9ydGV4IiwiYmFsYW5jZSI6OTk5OTk5MDAsInN1YiI6InVzZXJfMTIzNDU2IiwiZXhwIjoxNzM3NDAwMDAwLCJpYXQiOjE3Mzc0MDAwMDB9.fake-signature'
    },
    body: JSON.stringify({
      amount: 100,
      currency: 'USD'
    })
  })
  .then(response => response.json())
  .then(data => {
    console.log('[FORCE-GAME-LOGIC] ‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞:', data);
    
    if (button) {
      button.style.backgroundColor = '#4ECDC4';
      button.textContent = '–†–ê–ó–ú–ï–©–ê–ï–ú –°–¢–ê–í–ö–£...';
    }
    
    if (data.success && data.data) {
      // 2. –†–∞–∑–º–µ—â–∞–µ–º —Å—Ç–∞–≤–∫—É
      console.log('[FORCE-GAME-LOGIC] 2. –†–∞–∑–º–µ—â–∞–µ–º —Å—Ç–∞–≤–∫—É...');
      
      return fetch('/api/bets/place', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': localStorage.getItem('token') || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2LCJuaWNrbmFtZSI6IkxvY2FsVm9ydGV4IiwiYmFsYW5jZSI6OTk5OTk5MDAsInN1YiI6InVzZXJfMTIzNDU2IiwiZXhwIjoxNzM3NDAwMDAwLCJpYXQiOjE3Mzc0MDAwMDB9.fake-signature'
        },
        body: JSON.stringify({
          roundId: data.data.roundId,
          amount: 100,
          clientSeed: data.data.clientSeed,
          nonce: data.data.nonce,
          currency: 'USD'
        })
      });
    }
  })
  .then(response => response ? response.json() : null)
  .then(data => {
    if (data) {
      console.log('[FORCE-GAME-LOGIC] ‚úÖ –°—Ç–∞–≤–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∞:', data);
      
      if (button) {
        const result = data.data || data.payload;
        if (result && result.result === 'win') {
          button.style.backgroundColor = '#4CAF50';
          button.textContent = 'üéâ –í–´–ò–ì–†–´–®! üéâ';
        } else {
          button.style.backgroundColor = '#F44336';
          button.textContent = 'üí∏ –ü–†–û–ò–ì–†–´–®';
        }
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          button.style.backgroundColor = '';
          button.textContent = 'HOLD TO SPIN';
        }, 3000);
      }
      
      console.log('[FORCE-GAME-LOGIC] üéÆ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    }
  })
  .catch(error => {
    console.error('[FORCE-GAME-LOGIC] ‚ùå –û—à–∏–±–∫–∞ –≤ –∏–≥—Ä–µ:', error);
    
    if (button) {
      button.style.backgroundColor = '#FF9800';
      button.textContent = '–û–®–ò–ë–ö–ê';
      
      setTimeout(() => {
        button.style.backgroundColor = '';
        button.textContent = 'HOLD TO SPIN';
      }, 2000);
    }
  });
}

// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.forceGameLogic = forceGameLogic;
window.runGameSequence = runGameSequence;

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('load', () => {
  console.log('[FORCE-GAME-LOGIC] –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
  
  setTimeout(() => {
    forceGameLogic();
  }, 3000);
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è DOM
const observer = new MutationObserver(() => {
  const button = document.querySelector('[data-track="bet_1.place"]');
  if (button && button.classList.contains('_disabled')) {
    console.log('[FORCE-GAME-LOGIC] üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É...');
    setTimeout(forceGameLogic, 500);
  }
});

observer.observe(document.body, {
  childList: true,
  subtree: true,
  attributes: true,
  attributeFilter: ['class']
});

console.log('[FORCE-GAME-LOGIC] –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –í—ã–∑–æ–≤–∏—Ç–µ forceGameLogic() –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞');
